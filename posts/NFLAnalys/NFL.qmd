---
title: "NFL"
author: "Ayden Currier"
date: "2023-11-02"
categories: [NFL, code, data analysis]
image: "image.png"

execute: 
  warning: false
  message: false
  
toc: true
---
```{r}
#| include: false

library(knitr)
library(rmarkdown)
library(tidyverse)
library(skimr)
library(ggthemes)
library(hrbrthemes)

theme_set(theme_ipsum()+
          theme(strip.background =element_rect(fill="lightgray"),
                axis.title.x  = element_text(angle = 0,
                                            size = rel(1.5),
                                            margin = margin(10,0,0,0)),
                axis.title.y  = element_text(angle = 0,
                                            size = rel(1.5),
                                            margin = margin(0,10,0,0))
                )
          )
```

Let's analyze the `NFL2022_Stuffs` data:

```{r}
NFL_2022Stuffs <- read.csv("https://bcdanl.github.io/data/NFL2022_stuffs.csv")
```


```{r}
#| results: asis
rmarkdown::paged_table(NFL_2022Stuffs) 
```



## Variable Description for `NFL_2022Stuffs` data.frame

The following describes the variables in the `NFL_2022Stuffs` data.frame.


- play_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play
game_id: Ten digit identifier for NFL game.
drive: Numeric drive number in the game.
week: Season week.
posteam: String abbreviation for the team with possession.
qtr: Quarter of the game (5 is overtime).
half_seconds_remaining: Numeric seconds remaining in the half.
down: The down for the given play.
Basically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it).
If you make 10 yards then you get another set of four downs.
pass: Binary indicator if the play was a pass play.
wp: Estimated winning probability for the posteam given the current situation at the start of the given play.


## Purchase Patterns

We'll explore the Summarize the mean value of pass for each posteam 

- wp is greater than 20% and less than 75%;

- down is less than or equal to 2

-half_seconds_remaining is greater than 120.

I'll begin with these analyses and create visualizations to help us understand the data better

```{r}
# Assuming your data frame is named 'NFL_2022Stuffs'
library(dplyr)

# Filter the data based on the specified conditions
filtered_data <- NFL_2022Stuffs %>%
  filter(wp > 0.20 & wp < 0.75,
         down <= 2,
         half_seconds_remaining > 120)

# Group by 'posteam' and calculate the mean of 'pass'
summary_data <- filtered_data %>%
  group_by(posteam) %>%
  summarize(mean_pass = mean(pass, na.rm = TRUE))

# Print the summary data
print(summary_data)

```


```{r}
library(ggplot2)

# Assuming 'summary_data' is the resulting data frame from Q2b
# Reorder 'posteam' based on the mean value of 'mean_pass'
summary_data$posteam <- factor(summary_data$posteam, levels = summary_data$posteam[order(summary_data$mean_pass)])

# Create ggplot with geom_point
ggplot(summary_data, aes(x = posteam, y = mean_pass)) +
  geom_point() +
  labs(title = "Mean Value of pass for Each posteam",
       x = "posteam",
       y = "Mean pass value") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```


```{r}
NFL2022_epa <- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')
```



```{r}
# Assuming you have two data frames: NFL2022_stuffs and NFL2022_epa

# Load required library

library(dplyr)

# Merge data frames based on common variables

# Assuming you have two data frames named NFL2022_stuffs and NFL2022_epa

NFL_2022Stuffs_EPA <- NFL_2022Stuffs %>%
  left_join(NFL2022_epa %>% select(play_id, passer, receiver, epa), by = "play_id") %>%
  filter(!is.na(passer))


# Remove observations with NA in passer

NFL_2022Stuffs_EPA <- NFL_2022Stuffs_EPA %>%

filter(!is.na(passer))

# Now, NFL2022_stuffs_EPA contains all variables from NFL2022_stuffs

# and the variables passer, receiver, and epa from NFL2022_epa,

# with observations removed if passer is NA.

```



```{r}
# Assuming you have a data frame named NFL2022_stuffs_EPA
# and it contains the columns: week, passer, and epa

library(ggplot2)

# Filter data for the specific passers
selected_passers <- c("J.Allen", "P.Mahomes")
filtered_data <- NFL_2022Stuffs_EPA %>% filter(passer %in% selected_passers)

# Create ggplot with geom_line
ggplot(filtered_data, aes(x = week, y = epa, color = passer)) +
  geom_line() +
  labs(title = "Weekly Trend of Mean EPA for J.Allen and P.Mahomes",
       x = "Week",
       y = "Mean EPA") +
  scale_color_manual(values = c("J.Allen" = "blue", "P.Mahomes" = "red")) +
  theme_minimal()


```

The Bar Chart Represents the total amount of points that each Quarterback is 
is expected to reach each week in the NFL

Here I am Calculating the difference between the mean value of epa for "J.Allen" the mean value of epa for "P.Mahomes" for each value of week.

```{r}
# Assuming you have a data frame named NFL2022_stuffs_EPA
# and it contains the columns: week, passer, and epa

library(dplyr)

# Filter data for the specific passers
selected_passers <- c("J.Allen", "P.Mahomes")
filtered_data <- NFL_2022Stuffs_EPA %>% filter(passer %in% selected_passers)

# Calculate the mean EPA for each passer and week
mean_epa_per_week <- filtered_data %>%
  group_by(week, passer) %>%
  summarize(mean_epa = mean(epa, na.rm = TRUE))

# Pivot the data to have passers as columns
mean_epa_wide <- pivot_wider(mean_epa_per_week, names_from = passer, values_from = mean_epa)

# Calculate the difference between the mean values
mean_epa_wide$epa_difference <- mean_epa_wide$J.Allen - mean_epa_wide$P.Mahomes

# View the resulting data frame with the differences
print(mean_epa_wide)

```

Here I am Summarizing the resulting data.frame with the following four variables:

posteam: String abbreviation for the team with possession.
passer: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.)
mean_epa: Mean value of epa in 2022 for each passer
n_pass: Number of observations for each passer
Then find the top 10 NFL passers in 2022 in terms of the mean value of epa, conditioning that n_pass must be greater than or equal to the third quantile level of n_pass.


Due to issues create an individual column for the term "postseam"

```{r}
# Load the required library
library(dplyr)

# Read the CSV file
NFL2022_epa <- readr::read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')

library(dplyr)
library(readr)

# Read the data
NFL2022_epa <- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')

# Assuming 'postseam' is the correct column name, replace it with the correct name if needed
NFL2022_epa <- NFL2022_epa %>%
  mutate(posteam = posteam)

# Now, you can use the 'posteam' column in your subsequent analysis


# Assuming "posteam" is already a column in the dataset, if not, replace it with the actual column name
NFL2022_epa <- NFL2022_epa %>%
  mutate(posteam = posteam)

# View the modified dataset
head(NFL2022_epa)

```


```{r}
# Load the required library
library(dplyr)

# Read the CSV file
NFL2022_epa <- readr::read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')

# Assuming "posteam" is already a column in the dataset, if not, replace it with the actual column name
NFL2022_epa <- NFL2022_epa %>%
  mutate(posteam = posteam)

# Summarize the data
summary_data <- NFL2022_epa %>%
  group_by(posteam, passer) %>%
  summarize(mean_epa = mean(epa, na.rm = TRUE),
            n_pass = n())

# Find the third quantile level of n_pass
quantile_threshold <- quantile(summary_data$n_pass, 0.75)

# Filter data to include only passers with n_pass greater than or equal to the third quantile level
filtered_summary_data <- summary_data %>%
  filter(n_pass >= quantile_threshold)

# Find the top 10 passers based on mean_epa
top_10_passers <- filtered_summary_data %>%
   top_n(10, wt = mean_epa)
  

# View the resulting data frame
print(top_10_passers)



```

